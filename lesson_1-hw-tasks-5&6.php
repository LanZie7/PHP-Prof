<?php
//Задание 5. Что выведет код на каждом шаге? Почему?

class A {
    public function foo() {
        // переменная, определенная и получившая значение внутри метода,
        // существует только во время выполнения этого метода
        // из-за ключевого слова static присваивание выполняется только один раз, при первом вызове функции
        // и это назыв. статическая локальная переменная
        static $x = 0;
        echo ++$x; // Префиксный инкремент. Увеличивает $x на единицу, затем возвращает значение $x
    }
}
// метод будет существовать лишь в одном экземпляре, сколько бы не создавалось объектов класса
$a1 = new A();
$a2 = new A();
$a1->foo(); // 1
$a2->foo(); // 2
$a1->foo(); // 3
$a2->foo(); // 4

// Задание 6. Что выведет код на каждом шаге? Почему?
class C {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
// динамические методы существуют в контексте классов, а не объектов (см. задание 5).
class D extends C {
}
$a1 = new C();
$b1 = new D();
$a1->foo(); // 1
$b1->foo(); // 1
$a1->foo(); // 2
$b1->foo(); // 2